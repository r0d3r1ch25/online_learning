apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: online-learning-cron-v2
  namespace: argo
spec:
  schedule: "* * * * *"  # Every 1 minute
  successfulJobsHistoryLimit: 25
  failedJobsHistoryLimit: 5
  workflowSpec:
    entrypoint: online-learning-pipeline
    templates:
    - name: online-learning-pipeline
      steps:
      - - name: get-observation
          template: fetch-data
      - - name: extract-features
          template: process-features
          arguments:
            parameters:
            - name: observation
              value: "{{steps.get-observation.outputs.result}}"
      - - name: train-linear-model
          template: train-model
          arguments:
            parameters:
            - name: features
              value: "{{steps.extract-features.outputs.result}}"
            - name: model-service
              value: "model-service-linear"
            - name: model-port
              value: "8000"
        - name: train-ridge-model
          template: train-model
          arguments:
            parameters:
            - name: features
              value: "{{steps.extract-features.outputs.result}}"
            - name: model-service
              value: "model-service-ridge"
            - name: model-port
              value: "8000"
        - name: train-neural-model
          template: train-model
          arguments:
            parameters:
            - name: features
              value: "{{steps.extract-features.outputs.result}}"
            - name: model-service
              value: "model-service-neural"
            - name: model-port
              value: "8000"

    - name: fetch-data
      container:
        image: curlimages/curl:latest
        command: [sh, -c]
        args:
        - |
          echo "Fetching observation from ingestion service..."
          curl -s http://ingestion-service.ml-services.svc.cluster.local:8002/next

    - name: process-features
      inputs:
        parameters:
        - name: observation
      container:
        image: curlimages/curl:latest
        command: [sh, -c]
        args:
        - |
          echo "Processing features..."
          TARGET=$(echo '{{inputs.parameters.observation}}' | grep -o '"target":[^,}]*' | cut -d':' -f2)
          curl -s -X POST -H "Content-Type: application/json" \
            -d "{\"series_id\": \"pipeline_v2\", \"value\": $TARGET}" \
            http://feature-service.ml-services.svc.cluster.local:8001/add

    - name: train-model
      inputs:
        parameters:
        - name: features
        - name: model-service
        - name: model-port
      container:
        image: curlimages/curl:latest
        command: [sh, -c]
        args:
        - |
          echo "Training {{inputs.parameters.model-service}} model..."
          curl -s -X POST -H "Content-Type: application/json" \
            -d '{{inputs.parameters.features}}' \
            http://{{inputs.parameters.model-service}}.ml-services.svc.cluster.local:{{inputs.parameters.model-port}}/predict_learn